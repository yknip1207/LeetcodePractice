/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        

        ListNode resultNode = new ListNode((l1.val + l2.val) % 10);
        ListNode curNode = resultNode;
        int carry = (l1.val + l2.val) / 10;
        l1 = l1.next;
        l2 = l2.next;
        while(l1 != null || l2 != null){
            int stay = 0;
            if(l1 == null){
                stay = l2.val + carry;
                curNode.next = new ListNode(stay % 10);
                carry = stay / 10;
                l2 = l2.next;
            }
            else if(l2 == null){
                stay = l1.val + carry;
                curNode.next = new ListNode(stay % 10);
                carry = stay / 10;
                l1 = l1.next;
            }
            else{
                stay = l1.val + l2.val + carry;
                curNode.next = new ListNode(stay % 10);
                carry = stay / 10;
                l1 = l1.next;
                l2 = l2.next;
            }
            curNode = curNode.next;
        }
        if(carry != 0) 
            curNode.next = new ListNode(carry);
        return resultNode;
    }
        
        
    
}
